generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String

  restrictions Restriction[]
  favorites    Favorite[]
  recipes      Recipe[]
}

model Restriction {
  id     Int    @id @default(autoincrement())
  value  String
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}

model Favorite {
  id     Int    @id @default(autoincrement())
  value  String
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}

model Recipe {
  id             Int              @id @default(autoincrement())
  title          String
  userId         Int
  user           User             @relation(fields: [userId], references: [id], onDelete: Cascade)

  ingredients    Ingredient[]
  preparation    PreparationStep[]
  harmonizations Harmonization[]
  images         Image[]
}

model Ingredient {
  id        Int    @id @default(autoincrement())
  name      String
  amount    Float
  unit      String
  recipeId  Int
  recipe    Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
}

model PreparationStep {
  id        Int    @id @default(autoincrement())
  step      String
  recipeId  Int
  recipe    Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
}

model Harmonization {
  id        Int    @id @default(autoincrement())
  tip       String
  justification String?
  recipeId  Int
  recipe    Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
}

model Image {
  id        Int    @id @default(autoincrement())
  url       String
  recipeId  Int
  recipe    Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
}